{"version":3,"sources":["components/button/index.tsx","components/card/index.tsx","components/hamburger/index.tsx","components/sidenav/index.tsx","components/pageTitle/index.tsx","pages/dashboard/index.tsx","routes/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","size","round","color","buttonType","label","renderNonButton","type","props","className","style","children","Card","Hamburger","open","id","SideNav","useState","showPop","setShowPop","setOpen","onClick","src","alt","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","navData","isActive","to","role","aria-label","width","aria-valuenow","aria-valuemin","aria-valuemax","PageTitle","title","subTitle","Dashboard","scope","Routing","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dd276c0.chunk.js","sourcesContent":["import React, {\n  AriaAttributes,\n  ButtonHTMLAttributes, DetailedHTMLFactory, DetailedHTMLProps, HTMLAttributes, ReactHTML, ReactNode,\n} from 'react';\nimport './style.scss';\n\nexport interface IButtonProps extends DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>,\nAriaAttributes {\nsize?: 'sm'| 'md' | 'lg' | 'xl';\nround?: boolean;\ncolor?: string;\nbuttonType?: 'primary' | 'secondary' | 'tertiary' | 'danger' | 'success';\nrenderNonButton?: boolean,\nlabel?: string,\nchildren?: ReactNode\n}\nconst Button: React.FC<IButtonProps> = ({\n  size = 'md', round = false, color, buttonType = 'primary', label, renderNonButton = false, type = 'button', ...props\n}) => (\n  <div>\n    {!renderNonButton ? (\n      <button\n        type={type}\n        style={color ? { color } : {}}\n        className={`btn btn-${buttonType} btn-${size} ${round ? 'round' : ''}`}\n        {...props}\n      >\n        {props.children || label}\n        {' '}\n      </button>\n    )\n\n      : (\n        <div className={`non-button ${buttonType} ${round ? 'round' : ''}`}>\n          {label}\n        </div>\n      )}\n  </div>\n);\n\nexport default Button;\n","import React, { ReactNode } from 'react';\nimport './style.scss';\n\nconst Card: React.FC<{children: ReactNode}> = ({ children }) => (\n  <div className=\"card\">\n    {children}\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport './style.scss';\n\nconst Hamburger:React.FC<{open: boolean}> = ({ open }) => (\n  <div>\n    {/* <div id=\"nav-icon1\" className={open ? 'open' : ''}>\n      <span />\n      <span />\n      <span />\n    </div> */}\n    <div id=\"nav-icon2\" className={open ? 'open' : ''}>\n      <span />\n      <span />\n      <span />\n      <span />\n      <span />\n      <span />\n    </div>\n    {/* <div id=\"nav-icon3\" className={open ? 'open' : ''}>\n      <span />\n      <span />\n      <span />\n      <span />\n    </div> */}\n    {/* <div id=\"nav-icon4\" className={open ? 'open' : ''}>\n      <span />\n      <span />\n      <span />\n    </div> */}\n  </div>\n);\n\nexport default Hamburger;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../button';\nimport Card from '../card';\nimport Hamburger from '../hamburger';\nimport './style.scss';\n\nconst SideNav: React.FC<{children: ReactNode}> = ({ children }) => {\n  const [showPop, setShowPop] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      {/* Side nav */}\n      <div className={`sidenav ${open ? 'open' : ''}`}>\n        <div className=\"ham-burger\" onClick={() => setOpen(!open)}>\n          <Hamburger open={open} />\n        </div>\n        <div className=\"logo-container\">\n          <img src=\"./assets/images/logo.svg\" alt=\"logo\" />\n        </div>\n        {/* <a href=\"/\"> */}\n\n        <div className=\"accordion\" id=\"accordionNav\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button\n                className=\"accordion-button\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#home\"\n                aria-expanded=\"true\"\n                aria-controls=\"home\"\n              >\n                <img src=\"./assets/icons/home.svg\" alt=\"home\" />\n                <span>Home</span>\n              </button>\n            </h2>\n            <div\n              id=\"home\"\n              className=\"accordion-collapse collapse show\"\n              aria-labelledby=\"headingOne\"\n              data-bs-parent=\"#accordionNav\"\n            >\n              <div className=\"accordion-body\">\n                <ul>\n                  <li>\n                    <NavLink\n                      className={(navData) => (navData.isActive ? 'nav-active' : '')}\n                      to=\"/finvault-test\"\n                    >\n                      Transactions\n\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/finvault-test\">Deposit into Finvault</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/finvault-test\">Withdraw Funds</NavLink>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        {/* <div className=\"get-started\"> */}\n        <div className=\"get-started-button\">\n          <Button onClick={() => setShowPop(!showPop)} buttonType=\"primary\" round size=\"lg\">\n            <img src=\"./assets/icons/check.svg\" alt=\" \" />\n            Get Started: Level 1\n            <span className=\"notification\">3</span>\n          </Button>\n\n          <div className={`pop-up ${!showPop ? 'hidden' : ''}`}>\n            <Card>\n              <div className=\"card-top\">\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <h5>Your quick start guide</h5>\n                    <p>\n                      <span>LEVEL 1 </span>\n                      50% completed\n                    </p>\n                  </div>\n\n                  <input\n                    type=\"image\"\n                    onClick={() => setShowPop(!showPop)}\n                    className=\"hide-icon\"\n                    src=\"./assets/icons/blue-arrow-down.svg\"\n                    alt=\"close\"\n                  />\n                </div>\n                <div className=\"information\">\n                  <img src=\"./assets/icons/NFT-icon.svg\" alt=\"NFT\" />\n                  <p>Complete 2 levels and recieve your free NFT </p>\n                </div>\n              </div>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar bg-success\"\n                  role=\"progressbar\"\n                  aria-label=\"progress\"\n                  style={{ width: '25%' }}\n                  aria-valuenow={25}\n                  aria-valuemin={0}\n                  aria-valuemax={100}\n                />\n              </div>\n              <div className=\"card-body\">\n                <div className=\"item d-flex\">\n                  <img src=\"./assets/icons/transparent-check.svg\" alt=\"check\" />\n                  <div>\n                    <s>Open your account</s>\n                    <p className=\"small-text\">You have successfully opened your account</p>\n                  </div>\n                </div>\n                <div className=\"item d-flex\">\n                  <img src=\"./assets/icons/ID.svg\" alt=\"ID\" />\n                  <div>\n                    <p className=\"normal-text\">Verify your identity</p>\n                    <p className=\"small-text\">You have successfully opened your account</p>\n                  </div>\n                </div>\n\n                <div className=\"item d-flex bg-secondary\">\n                  <img src=\"./assets/icons/phone.svg\" alt=\"phone\" />\n                  <div>\n                    <p className=\"normal-text\">Verify your phone number</p>\n                    <p className=\"small-text\">You have successfully opened your account</p>\n                  </div>\n                </div>\n\n                <div className=\"item d-flex\">\n                  <img src=\"./assets/icons/account.svg\" alt=\"account\" />\n                  <div>\n                    <p className=\"normal-text\">Verify your identity</p>\n                    <p className=\"small-text\">You have successfully opened your account</p>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n\n        {/* </div> */}\n      </div>\n      {/* Main */}\n      <div className={`main ${open ? 'open' : ''}`}>\n        <div className=\"ham-burger\" onClick={() => setOpen(!open)}>\n          <Hamburger open={open} />\n        </div>\n        {open ? null : children}\n      </div>\n    </div>\n  );\n};\nexport default SideNav;\n","import React from 'react';\nimport './style.scss';\n\nexport interface IPageTitleProps {\ntitle: string;\nsubTitle?: string\n}\nconst PageTitle: React.FC<IPageTitleProps> = ({ title, subTitle = 'OVERVIEW' }) => (\n  <div className=\"wrapper\">\n    <div className=\"title-wrapper\">\n      <p className=\"subtitle\">{subTitle}</p>\n      <h3 className=\"title\">{title}</h3>\n    </div>\n  </div>\n);\n\nexport default PageTitle;\n","import React from 'react';\nimport PageTitle from '../../components/pageTitle';\nimport Card from '../../components/card';\nimport './style.scss';\nimport Button from '../../components/button';\n\nconst Dashboard = () => (\n  <div className=\"dashboard-wrapper\">\n    <PageTitle title=\"Dashboard\" />\n    <section>\n      <div className=\"row mb-4\">\n        <div className=\"col-md-6\">\n          <Card>\n            <div className=\"d-flex justify-content-between card-inner-wrapper\">\n              <img src=\"./assets/icons/doller.svg\" alt=\"$\" />\n              <div className=\"description\">\n                <p>USDC</p>\n                <h4>12,200.50</h4>\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-between card-inner-wrapper mt-2\">\n              <Button type=\"button\" size=\"sm\" buttonType=\"primary\" label=\"Send\" />\n              <Button type=\"button\" size=\"sm\" label=\"Convert\" buttonType=\"secondary\" />\n            </div>\n          </Card>\n        </div>\n        <div className=\"col-md-6\">\n          <Card>\n            <div className=\"d-flex justify-content-between card-inner-wrapper\">\n              <img src=\"./assets/icons/aed.svg\" alt=\"$\" />\n              <div className=\"description\">\n                <p>UAE DIRHAM</p>\n                <h4>12,200.50</h4>\n              </div>\n            </div>\n            <div className=\"d-flex justify-content-between card-inner-wrapper mt-2\">\n              <button type=\"button\" className=\"btn btn-primary btn-sm\">Send</button>\n              <button type=\"button\" className=\"btn btn-secondary btn-sm\">Convert</button>\n            </div>\n          </Card>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-hover\">\n              <thead>\n                <tr className=\"table-active\">\n                  <th scope=\"col\">\n\n                    <div className=\"d-flex\">\n                      <span>From</span>\n                      <div className=\"filters\">\n                        <div className=\"arrow-up\" />\n                        <div className=\"arrow-down\" />\n                      </div>\n                    </div>\n\n                  </th>\n                  <th scope=\"col\">\n                    <div className=\"d-flex\">\n                      <span>To</span>\n                      <div className=\"filters\">\n                        <div className=\"arrow-up\" />\n                        <div className=\"arrow-down\" />\n                      </div>\n                    </div>\n                  </th>\n                  <th scope=\"col\">\n                    <div className=\"d-flex\">\n                      <span>Currency</span>\n                      <div className=\"filters\">\n                        <div className=\"arrow-up\" />\n                        <div className=\"arrow-down\" />\n                      </div>\n                    </div>\n                  </th>\n                  <th scope=\"col\">\n                    <div className=\"d-flex\">\n                      <span>100.00</span>\n                      <div className=\"filters\">\n                        <div className=\"arrow-up\" />\n                        <div className=\"arrow-down\" />\n                      </div>\n                    </div>\n\n                  </th>\n                  <th scope=\"col\">\n                    <div className=\"d-flex\">\n                      <span>Action</span>\n                      <div className=\"filters\">\n                        <div className=\"arrow-up\" />\n                        <div className=\"arrow-down\" />\n                      </div>\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Finvault</td>\n                  <td>My Wallet</td>\n                  <td>USD Coin (PoS)</td>\n                  <td>100.00</td>\n                  <td><Button label=\"Received\" buttonType=\"success\" size=\"sm\" round renderNonButton /></td>\n                </tr>\n                <tr>\n                  <td>Finvault</td>\n                  <td>My Wallet</td>\n                  <td>USD Coin (PoS)</td>\n                  <td>100.00</td>\n                  <td><Button label=\"Sent\" buttonType=\"danger\" size=\"sm\" round renderNonButton /></td>\n                </tr>\n\n              </tbody>\n            </table>\n          </div>\n\n        </div>\n      </div>\n    </section>\n\n  </div>\n);\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport SideNav from '../components/sidenav';\nimport Dashboard from '../pages/dashboard';\n\nconst Routing = () => (\n\n  <BrowserRouter>\n    <SideNav>\n      <Routes>\n        <Route path=\"/finvault-test\" element={<Dashboard />} />\n      </Routes>\n    </SideNav>\n  </BrowserRouter>\n\n);\n\nexport default Routing;\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport Main from './routes/main';\n\nconst App: React.FC = () => (\n  <Main />\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler):void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}